<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OpenBankingMapper">
	<cache />

	<!-- 오픈뱅킹 계좌 등록 -->
	<insert id="InsertOpenBanking" parameterType="OPENBANKING">
		INSERT INTO OPENBANKING (
			OPEN_ACCOUNT_NO,
			OPEN_BANK,
			member_id,  
			OPEN_ACCOUNT_PW, 
			OPEN_BALANCE,
			OPEN_CARD_NAME,
			REGDATE )
		VALUES ( #{OPEN_ACCOUNT_NO}, #{OPEN_BANK}, #{member_id}, #{OPEN_ACCOUNT_PW}, #{OPEN_BALANCE}, #{OPEN_CARD_NAME}, sysdate )
		<!--WHERE-->
	</insert>

	<!-- 오픈뱅킹 계좌 삭제 -->
	<delete id="DeleteOpenBanking" parameterType="OPENBANKING">
  		DELETE FROM OPENBANKING
  		WHERE 
			 member_id = #{member_id} AND OPEN_ACCOUNT_NO = #{OPEN_ACCOUNT_NO} AND OPEN_ACCOUNT_PW = #{OPEN_ACCOUNT_PW}
  	</delete>

	<!-- 오픈뱅킹 계좌 조회 -->
	<select id="SelectOpenBanking" parameterType="String" resultType="OPENBANKING">
		SELECT
			OPEN_ACCOUNT_NO,
			OPEN_BANK,
			member_id,
			OPEN_BALANCE,
			OPEN_CARD_NAME,
			TO_CHAR(REGDATE,'YYYY-MM-DD')
		FROM 
			OPENBANKING
		WHERE 
			member_id = #{member_id}
		ORDER BY
			REGDATE
	</select>
	<select id="SelectList" parameterType="String" resultType="OPENBANKING">
		SELECT
			*
		FROM 
			OPENBANKING
		where member_id=#{member_id}
	</select>

	<!--	
	<select id="SelectId" parameterType="OPENBANKING" resultType="OPENBANKING">
		SELECT
			member_id
		FROM 
			OPENBANKING
	</select>
	<select id="SelectPw" parameterType="OPENBANKING" resultType="OPENBANKING">
		SELECT
			OPEN_ACCOUNT_PW
		FROM 
			OPENBANKING
	</select>
	<select id="SelectBalance" parameterType="OPENBANKING" resultType="OPENBANKING">
		SELECT
			OPEN_BALANCE
		FROM 
			OPENBANKING
	</select>
	-->

	<!-- 잔액모으기(출금계좌) -->
	<update id="WithdrawOpenBanking" parameterType="HashMap">
		UPDATE 
			OPENBANKING 
		SET 
			OPEN_BALANCE = OPEN_BALANCE - #{money}
		WHERE 
			 member_id = #{member_id} AND OPEN_ACCOUNT_PW = #{OPEN_ACCOUNT_PW}
	</update>

	<!-- 잔액모으기(입금계좌) -->
	<update id="DepositOpenBanking" parameterType="HashMap">
		UPDATE 
			MainAccount 
		SET
			BALANCE = BALANCE + #{money}
		WHERE 
			account_num = #{account_num}
	</update>

	<!-- 거래내역 로그(잔액모으기 내역) -->
	<insert id="WithdrawLog" parameterType="HashMap">
		INSERT INTO INSTANT (
		 	member_id,
			MY_ACCOUNT_NUM,
			COLLECTING_MONEY,
			COLLECTING_DAY,
			SUMMARY,
			MEMO )
		VALUES ( #{member_id}, #{account_num}, #{money},
				 sysdate, '즉시모으기', '메모' )		
	</insert>

	<!--거래내역 조회 -->
	<select id="SelectWithdrawLog" parameterType="String" resultType="INSTANT">
		SELECT
			member_id,
			MY_ACCOUNT_NUM,
			COLLECTING_MONEY,
			COLLECTING_DAY,
			SUMMARY,
			MEMO 
		FROM 
			INSTANT
		WHERE 
			member_id = #{member_id}
		ORDER BY
			COLLECTING_DAY
	</select>

	<select id="checkaccount" parameterType="String" resultType="String">
		SELECT 
			account_num 
		FROM 
			ACCOUNT 
		WHERE
			 member_id = #{member_id}
	</select>

	<!--메인페이지 총 잔액 조회-->
	<select id="TotalOpenBalance" parameterType="String" resultType="int">
		SELECT
			SUM ( OPEN_BALANCE ) AS TOTAL
		FROM 
			OPENBANKING
		WHERE 
			member_id = #{member_id}
	</select>
</mapper>